services:
  mongo:
    image: mongo:latest
    container_name: mongo_db
    hostname: mongo_db
    volumes:
      - mongodb_data:/data/db/
      - mongodb_log:/var/log/mongodb/
    env_file:
      - .env
    secrets:
      - mongo_password
    ports:
      - "${MONGO_PORT}:${MONGO_PORT}"
    networks:
      - mongodb_network

  qdrant:
    container_name: qdrant_db
    hostname: qdrant_db
    image: qdrant/qdrant:latest
    ports:
      - "${QDRANT_PORT}:${QDRANT_PORT}"
      - "${QDRANT_GRPC_PORT}:${QDRANT_GRPC_PORT}"
    secrets:
      - qdrant_password
    volumes:
      - qdrant_storage:/qdrant/storage
    networks:
      - qdrant_network
    env_file:
      - .env

  minio:
    container_name: minio
    hostname: minio
    image: minio/minio:latest
    ports:
      - "${MINIO_PORT}:${MINIO_PORT}"
    secrets:
      - minio_password
    volumes:
      - minio_data:/data
    networks:
      - minio_network
    env_file:
      - .env

  backend:
    build:
      dockerfile: Dockerfile
      context: ./
    container_name: backend
    hostname: backend
    ports:
      - "8080:8080"
    develop:
      watch:
        - action: sync+restart
          path: .
          target: /usr/src/app
          ignore:
            - ./data/
    networks:
      - qdrant_network
      - mongodb_network
      - minio_network
    depends_on:
      - qdrant
      - mongo
      - minio

secrets:
  mongo_password:
    file: secrets/mongo_password.txt
  qdrant_password:
    file: secrets/qdrant_password.txt
  minio_password:
    file: secrets/minio_password.txt

volumes:
  qdrant_storage:
  mongodb_data:
  mongodb_log:
  minio_data:

networks:
  mongodb_network:
  qdrant_network:
  minio_network:
